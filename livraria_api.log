2023-03-28T13:50:38.273Z [ livraria_api ] info POST /cliente - {"clienteId":1,"nome":"João","email":"joao@email.com","senha":"1234","telefone":"(99) 9 9999-9999","endereco":"Rua A, Bairro Cidade Nova"}
2023-03-28T14:06:35.441Z [ livraria_api ] info PUT /cliente - {"clienteId":1,"nome":"João Silva","email":"joao@email.com","senha":"1234","telefone":"(99) 9 9999-9999","endereco":"Rua A, Bairro Cidade Nova"}
2023-03-28T15:28:48.216Z [ livraria_api ] error DELETE  - vendas is not associated to clientes!
2023-03-28T15:37:52.385Z [ livraria_api ] error DELETE  - Possui uma venda
2023-03-28T15:40:36.872Z [ livraria_api ] error DELETE  - Possui uma venda
2023-03-28T15:43:44.113Z [ livraria_api ] error DELETE  - O cliente_id informado não existe!
2023-03-28T15:45:08.447Z [ livraria_api ] error PUT  - O cliente_id informado não existe!
2023-03-28T15:59:37.386Z [ livraria_api ] info GET /cliente
2023-03-28T16:05:54.124Z [ livraria_api ] info GET /cliente/1
2023-03-28T16:07:16.724Z [ livraria_api ] error GET  - Argument passed to findByPk is invalid: [object Object]
2023-03-28T16:07:37.714Z [ livraria_api ] info GET /cliente/1
2023-03-28T16:08:13.289Z [ livraria_api ] info GET /cliente/1
2023-03-28T16:51:40.538Z [ livraria_api ] info POST /autor - {"autorId":4,"nome":"Pedro","email":"pedro@email.com","telefone":"(11) 1 1111-1111"}
2023-03-28T17:00:27.860Z [ livraria_api ] info PUT /autor - {"autorId":4,"nome":"Pedro Souza","email":"pedro@email.com","telefone":"(11) 1 1111-1111"}
2023-03-28T17:00:34.950Z [ livraria_api ] error PUT  - Autor ID, nome, email e telefone são obrigatórios!
2023-03-28T17:00:42.251Z [ livraria_api ] error PUT  - O autor_id informado não existe!
2023-03-29T15:32:43.128Z [ livraria_api ] error DELETE  - Possui uma venda
2023-03-29T15:32:50.984Z [ livraria_api ] info GET /cliente
2023-03-29T15:33:03.892Z [ livraria_api ] error DELETE  - Possui uma venda
2023-03-29T15:42:54.100Z [ livraria_api ] error DELETE  - Possui uma venda
2023-03-29T15:45:25.770Z [ livraria_api ] error DELETE  - Possui uma venda
2023-03-29T15:47:11.668Z [ livraria_api ] info DELETE /cliente/9
2023-03-29T15:56:00.640Z [ livraria_api ] info DELETE /autor/5
2023-03-29T16:08:45.229Z [ livraria_api ] info GET /autor
2023-03-29T16:11:47.908Z [ livraria_api ] info GET /autor/2
2023-03-29T16:14:23.844Z [ livraria_api ] info GET /autor/2
2023-03-29T16:15:36.731Z [ livraria_api ] info GET /autor/2
2023-03-29T16:38:39.978Z [ livraria_api ] info POST /autor - {"autorId":6,"nome":"Pedro","email":"pedro@email.com","telefone":"(11) 1 1111-1111"}
2023-03-29T16:39:05.635Z [ livraria_api ] error POST  - Nome, valor, estoque e autor_id são obrigatórios!
2023-03-29T16:39:43.753Z [ livraria_api ] error POST  - Nome, valor, estoque e autor_id são obrigatórios!
2023-03-29T16:40:05.528Z [ livraria_api ] error POST  - loggers is not defined
2023-03-29T16:40:45.028Z [ livraria_api ] error POST  - loggers is not defined
2023-03-29T16:53:00.465Z [ livraria_api ] error POST  - next is not defined
2023-03-29T16:55:06.323Z [ livraria_api ] error PUT  - Proibido mudar o nome ou o autor do livro!
2023-03-29T16:55:41.211Z [ livraria_api ] error PUT  - Livro ID, valor e estoque são obrigatórios!
2023-03-29T16:55:58.002Z [ livraria_api ] error PUT  - WHERE parameter "autor_id" has invalid "undefined" value
2023-03-29T16:56:52.858Z [ livraria_api ] info PUT /livro - undefined
2023-03-29T16:58:01.374Z [ livraria_api ] info PUT /livro - undefined
2023-03-29T16:58:58.549Z [ livraria_api ] info POST /cliente - {"clienteId":10,"nome":"Fulano Silva","email":"fulano@email.com","senha":"1234","telefone":"(99) 9 9999-9999","endereco":"Rua A, Bairro Cidade Nova"}
2023-03-29T16:59:27.932Z [ livraria_api ] info PUT /cliente - {"clienteId":10,"nome":"Fulano Sousa","email":"fulano@email.com","telefone":"(99) 9 9999-9999","endereco":"Rua A, Bairro Cidade Nova"}
2023-03-29T17:01:47.495Z [ livraria_api ] info PUT /livro - undefined
2023-03-29T17:04:38.193Z [ livraria_api ] info PUT /livro - null
2023-03-29T17:05:25.948Z [ livraria_api ] info PUT /livro - {"livroId":8,"nome":"Setor Público","valor":"150","estoque":3,"autorId":6}
2023-03-29T17:09:46.596Z [ livraria_api ] error PUT  - O livro_id informado não existe!
2023-03-29T19:54:19.864Z [ livraria_api ] info GET /autor
2023-03-29T19:55:19.103Z [ livraria_api ] info POST /autor - {"autorId":4,"nome":"José SIlva","email":"jose@email.com","telefone":"83996565550"}
2023-03-29T19:55:42.687Z [ livraria_api ] info POST /livro - {"livroId":7,"nome":"Serviço Público","valor":"145.25","estoque":"4","autorId":4}
2023-03-29T19:56:15.681Z [ livraria_api ] error PUT  - Livro ID, valor e estoque são obrigatórios!
2023-03-29T19:56:46.060Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150","estoque":"4","autorId":4}
2023-03-29T19:59:22.640Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150","estoque":"4","autorId":4}
2023-03-29T20:00:29.250Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150","estoque":"4","autorId":4}
2023-03-29T20:01:08.928Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150","estoque":"4","autorId":4}
2023-03-29T20:04:23.065Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150","estoque":"4","autorId":4}
2023-03-29T20:09:00.299Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150","estoque":"4","autorId":4}
2023-03-29T20:09:14.720Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150.75","estoque":"4","autorId":4}
2023-03-29T20:09:36.811Z [ livraria_api ] info PUT /livro - {"livroId":7,"nome":"Serviço Público","valor":"150.75","estoque":"4","autorId":4}
2023-03-29T20:21:28.861Z [ livraria_api ] info DELETE /livro/7
2023-03-30T12:47:24.126Z [ livraria_api ] error POST  - The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.
2023-03-30T12:49:08.022Z [ livraria_api ] error POST  - The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.
2023-03-30T12:49:59.967Z [ livraria_api ] error POST  - The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.
2023-03-30T12:52:06.374Z [ livraria_api ] error POST  - res.stattus is not a function
2023-03-30T12:55:35.800Z [ livraria_api ] error POST  - Cast to ObjectId failed for value "5" (type number) at path "_id" for model "LivroInfo"
2023-03-30T13:39:56.309Z [ livraria_api ] info DELETE /livro/8
2023-03-30T13:40:07.641Z [ livraria_api ] info POST /livro - {"livroId":9,"nome":"Setor Público","valor":"15.99","estoque":3,"autorId":6}
2023-03-30T13:44:27.728Z [ livraria_api ] info GET /livro/1
2023-03-30T13:50:11.424Z [ livraria_api ] error GET  - findAll is not defined
2023-03-30T13:51:02.491Z [ livraria_api ] info GET /livro
2023-03-30T14:01:08.045Z [ livraria_api ] info GET /livro
2023-03-30T14:01:32.183Z [ livraria_api ] info GET /livro
2023-03-30T14:14:25.557Z [ livraria_api ] error PUT  - loggers is not defined
